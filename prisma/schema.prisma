generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model daily_tasks {
  task_id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  kpi_id           String        @db.Uuid
  user_id          String        @db.Uuid
  task_description String
  task_date        DateTime      @db.Date
  is_completed     Boolean       @default(false)
  completed_at     DateTime?     @db.Timestamptz(6)
  proposed_kpis    proposed_kpis @relation(fields: [kpi_id], references: [kpi_id], onDelete: NoAction, onUpdate: NoAction)
  users            users         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model proposed_kpis {
  kpi_id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  goal_id           String          @db.Uuid
  suggested_role_id Int?
  assigned_user_id  String?         @db.Uuid
  kpi_description   String
  target_bulanan    BigInt?
  platform          String?         @db.VarChar(100)
  source            String?         @db.VarChar(100)
  is_approved       Boolean         @default(false)
  daily_tasks       daily_tasks[]
  users             users?          @relation(fields: [assigned_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  strategic_goals   strategic_goals @relation(fields: [goal_id], references: [goal_id], onDelete: NoAction, onUpdate: NoAction)
  roles             roles?          @relation(fields: [suggested_role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model roles {
  role_id       Int             @id @default(autoincrement())
  role_name     String          @unique @db.VarChar(100)
  description   String?
  proposed_kpis proposed_kpis[]
  users         users[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model strategic_goals {
  goal_id             String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  goal_name           String                @db.VarChar(255)
  target_value        BigInt
  start_date          DateTime              @db.Date
  end_date            DateTime              @db.Date
  status              String                @default("Pending") @db.VarChar(50)
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  business_unit_id    String?               @db.Uuid
  created_by_user_id  String?               @db.Uuid
  target_unit         String?               @db.VarChar(100)
  proposed_breakdowns proposed_breakdowns[]
  proposed_kpis       proposed_kpis[]
  business_units      business_units?       @relation(fields: [business_unit_id], references: [bu_id], onDelete: NoAction, onUpdate: NoAction)
  created_by_user     users?                @relation(fields: [created_by_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  user_id          String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String            @db.VarChar(255)
  email            String            @unique @db.VarChar(255)
  role_id          Int?
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  business_unit_id String?           @db.Uuid
  daily_tasks      daily_tasks[]
  proposed_kpis    proposed_kpis[]
  created_goals    strategic_goals[]
  business_units   business_units?   @relation(fields: [business_unit_id], references: [bu_id], onDelete: NoAction, onUpdate: NoAction)
  roles            roles?            @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model business_units {
  bu_id           String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String            @db.VarChar(255)
  description     String?
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  strategic_goals strategic_goals[]
  users           users[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model proposed_breakdowns {
  breakdown_id    String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  goal_id         String          @db.Uuid
  name            String
  value           BigInt
  status          String          @default("pending_approval") @db.VarChar(50)
  created_at      DateTime?       @default(now()) @db.Timestamptz(6)
  strategic_goals strategic_goals @relation(fields: [goal_id], references: [goal_id], onDelete: Cascade, onUpdate: NoAction)
}
