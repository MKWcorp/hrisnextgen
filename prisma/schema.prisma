generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model daily_tasks {
  task_id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  kpi_id           String        @db.Uuid
  user_id          String        @db.Uuid
  task_description String
  task_date        DateTime      @db.Date
  is_completed     Boolean       @default(false)
  completed_at     DateTime?     @db.Timestamptz(6)
  proposed_kpis    proposed_kpis @relation(fields: [kpi_id], references: [kpi_id], onDelete: NoAction, onUpdate: NoAction)
  users            users         @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model proposed_kpis {
  kpi_id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  kpi_description        String
  is_approved            Boolean              @default(false)
  breakdown_id           String               @db.Uuid
  role_recommendation_id String               @db.Uuid
  batch_id               String               @db.Uuid
  kpi_target_value       BigInt
  kpi_target_unit        String               @db.VarChar(100)
  status                 String               @default("pending_assignment") @db.VarChar(50)
  assigned_user_id       String?              @db.Uuid
  daily_tasks            daily_tasks[]
  assigned_user          users?               @relation("assigned_kpis", fields: [assigned_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  analysis_batches       analysis_batches     @relation(fields: [batch_id], references: [batch_id], onDelete: Cascade, onUpdate: NoAction)
  proposed_breakdowns    proposed_breakdowns  @relation(fields: [breakdown_id], references: [breakdown_id], onDelete: NoAction, onUpdate: NoAction)
  ai_recommended_roles   ai_recommended_roles @relation(fields: [role_recommendation_id], references: [role_recommendation_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model roles {
  role_id     Int     @id @default(autoincrement())
  role_name   String  @unique @db.VarChar(100)
  description String?
  users       users[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model strategic_goals {
  goal_id            String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  goal_name          String            @db.VarChar(255)
  target_value       BigInt
  start_date         DateTime          @db.Date
  end_date           DateTime          @db.Date
  created_at         DateTime?         @default(now()) @db.Timestamptz(6)
  target_unit        String?           @db.VarChar(100)
  batch_id           String?           @db.Uuid
  business_unit_id   String?           @db.Uuid
  created_by_user_id String?           @db.Uuid
  analysis_batches   analysis_batches? @relation(fields: [batch_id], references: [batch_id], onDelete: Cascade, onUpdate: NoAction)
  business_units     business_units?   @relation(fields: [business_unit_id], references: [bu_id], onDelete: NoAction, onUpdate: NoAction)
  users              users?            @relation(fields: [created_by_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  user_id          String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String             @db.VarChar(255)
  email            String             @unique @db.VarChar(255)
  role_id          Int?
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  business_unit_id String?            @db.Uuid
  analysis_batches analysis_batches[]
  daily_tasks      daily_tasks[]
  assigned_kpis    proposed_kpis[]    @relation("assigned_kpis")
  strategic_goals  strategic_goals[]
  business_units   business_units?    @relation(fields: [business_unit_id], references: [bu_id], onDelete: NoAction, onUpdate: NoAction)
  roles            roles?             @relation(fields: [role_id], references: [role_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model business_units {
  bu_id            String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String             @db.VarChar(255)
  description      String?
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  analysis_batches analysis_batches[]
  strategic_goals  strategic_goals[]
  users            users[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model proposed_breakdowns {
  breakdown_id     String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String
  value            BigInt
  status           String            @default("pending_approval") @db.VarChar(50)
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  batch_id         String?           @db.Uuid
  unit             String?
  description      String
  analysis_batches analysis_batches? @relation(fields: [batch_id], references: [batch_id], onDelete: Cascade, onUpdate: NoAction)
  proposed_kpis    proposed_kpis[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model analysis_batches {
  batch_id             String                 @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  batch_name           String                 @db.VarChar(255)
  created_by_user_id   String?                @db.Uuid
  business_unit_id     String?                @db.Uuid
  status               String                 @default("Draft") @db.VarChar(50)
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  summary              String?
  ai_recommended_roles ai_recommended_roles[]
  business_units       business_units?        @relation(fields: [business_unit_id], references: [bu_id], onDelete: NoAction, onUpdate: NoAction)
  users                users?                 @relation(fields: [created_by_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  batch_managed_assets batch_managed_assets[]
  proposed_breakdowns  proposed_breakdowns[]
  proposed_kpis        proposed_kpis[]
  strategic_goals      strategic_goals[]
}

/// AI-generated role recommendations for analysis batches
model ai_recommended_roles {
  role_recommendation_id String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  batch_id               String           @db.Uuid
  role_name              String           @db.VarChar(255)
  responsibilities       String
  created_at             DateTime?        @default(now()) @db.Timestamptz(6)
  analysis_batches       analysis_batches @relation(fields: [batch_id], references: [batch_id], onDelete: Cascade, onUpdate: NoAction)
  proposed_kpis          proposed_kpis[]
}

model analysis_results {
  analysis_id              String    @id @db.VarChar(50)
  analyzed_at              DateTime? @default(now()) @db.Timestamp(6)
  goals_analyzed           Int?
  skor_portfolio           Int?
  status                   String?   @db.VarChar(50)
  quick_summary            String?
  full_analysis            String?
  approved_recommendations String?
  status_workflow          String?   @default("quick_done") @db.VarChar(50)
  created_at               DateTime? @default(now()) @db.Timestamp(6)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model batch_managed_assets {
  asset_id         String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  batch_id         String           @db.Uuid
  asset_category   String           @db.VarChar(100)
  asset_name       String           @db.VarChar(255)
  asset_identifier String?
  created_at       DateTime?        @default(now()) @db.Timestamptz(6)
  metric_name      String?          @db.VarChar(100)
  metric_value     BigInt?
  analysis_batches analysis_batches @relation(fields: [batch_id], references: [batch_id], onDelete: Cascade, onUpdate: NoAction)
}
